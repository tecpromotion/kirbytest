/*
  Slider
  ===========
  Creates an slide styling for Card and Imageslider, using the Flickity.js library.
*/
.c-slider {
  // Component Config
  $api: (
    margin-bottom: s(2),
    breakpoints: (
      one: false,
      two: 500px,
      three: 700px,
      four: 800px,
      five: 900px,
      six: 1000px,
    ),
    flickity: (
      nav: (
        background: rgba(0, 0, 0, 0),
        color: rgba(c('white'), .5),
        hover: rgba(c('white'), .9)
      )
    )
  );

  // ::::::::: ROOT SELECTOR
  $root: #{&};

  // ::::::::: API GRABBER
  @function api($keys...) {
    @return map-deep-get($api, $keys...);
  }

  // ::::::::: BASE
  margin-bottom: api(margin-bottom);
  height: 100%;

  // Overwrites ----------------------------
  // Style Modification Flickity
  .flickity-prev-next-button,
  .flickity-prev-prev-button {
    background: api(flickity, nav, background);

    svg path {
      fill: api(flickity, nav, color);
    }

    &:hover {
      svg path {
        fill: api(flickity, nav, hover);
      }
    }
  }

  .flickity-page-dots {
    bottom: -25px;
  }

  // ::::::::: CHILDS

  // [root]__slide
  &__slide {
    width: 100%;

    &--auto {
      width: auto;
    }

    // Building Columns
    $list-length: length(api(breakpoints));

    @for $i from 1 through $list-length {
      $iterator: nth(api(breakpoints), $i);
      $key: nth($iterator, 1);
      $value: nth($iterator, 2);

      // Slide Sizes
      &--#{$i} {
        width: 100 / $i + 0%;
      }

      // If Breakpointsize is not `false`
      @if $value != false {
        @include cqr($root, 'width >= #{$value}') {
          // Colum Size
          @at-root %col-size-#{$i} {
            width: 100 / $i + 0%;
          }

          /* stylelint-disable */
          // Build Inner Classes
          @for $ii from $i through $list-length {
            &-r--#{$ii} {
              @extend %col-size-#{$i};
            }
          }
          /* stylelint-enable */
        }
      }
    }
  }
}
